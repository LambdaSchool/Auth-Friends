[{"/Users/austinlittlefield/Auth-Friends/friends/src/index.js":"1","/Users/austinlittlefield/Auth-Friends/friends/src/App.js":"2","/Users/austinlittlefield/Auth-Friends/friends/src/reportWebVitals.js":"3","/Users/austinlittlefield/Auth-Friends/friends/src/components/Login.js":"4","/Users/austinlittlefield/Auth-Friends/friends/src/components/PrivateRoute.js":"5","/Users/austinlittlefield/Auth-Friends/friends/src/utils/axiosWithAuth.js":"6","/Users/austinlittlefield/Auth-Friends/friends/src/components/Friends.js":"7"},{"size":500,"mtime":1607205527407,"results":"8","hashOfConfig":"9"},{"size":958,"mtime":1607480593051,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607205527407,"results":"11","hashOfConfig":"9"},{"size":3021,"mtime":1607296856240,"results":"12","hashOfConfig":"9"},{"size":674,"mtime":1607208934247,"results":"13","hashOfConfig":"9"},{"size":281,"mtime":1607294595437,"results":"14","hashOfConfig":"9"},{"size":518,"mtime":1607296856240,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1rzor0d",{"filePath":"19","messages":"20","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/austinlittlefield/Auth-Friends/friends/src/index.js",[],["32","33"],"/Users/austinlittlefield/Auth-Friends/friends/src/App.js",["34"],"/Users/austinlittlefield/Auth-Friends/friends/src/reportWebVitals.js",[],"/Users/austinlittlefield/Auth-Friends/friends/src/components/Login.js",["35"],"import React, {useState} from 'react'\nimport axiosWithAuth from '../utils/axiosWithAuth';\n\n\nclass Login extends React.Component {\n    state = {\n      credentials: {\n        username: '',\n        password: ''\n      }\n    };\n  \n    handleChange = e => {\n      this.setState({\n        credentials: {\n          ...this.state.credentials,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n  \n    /*\n      1. connect to server with username/passowrd\n      2. store the token that gets passed on successful login\n      3. output an error when we have an unsuccessful login\n    */\n  \n    login = e => {\n      e.preventDefault();\n      // login to server\n      axiosWithAuth().post(\"http://localhost:5000/api/login\", this.state.credentials)\n        .then(res => {\n          console.log('bk: Login.js: login: res: ', res)\n          localStorage.setItem('token', res.data.payload)\n          this.props.history.push('/protected')\n        })\n        .catch(err => {\n          console.error(err.response)\n        })\n    };\n  \n    render() {\n      return (\n        <div>\n          <form onSubmit={this.login}>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.credentials.username}\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.credentials.password}\n              onChange={this.handleChange}\n            />\n            <button>Log in</button>\n          </form>\n        </div>\n      );\n    }\n  }\n  \n  export default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function Login() {\n\n// const [state, setState] = useState({\n//             username: '',\n//             password: ''\n//     })\n\n//     const handleChange = e => {\n//         const value = e.target.value;\n//         setState({\n//             ...state,\n//             [e.target.name]: value\n//         })\n\n//     }\n\n\n\n//     const login = (e,props) => {\n//         e.preventDefault()\n//         //logs into the server\n//         axiosWithAuth().post(\"http://localhost:5000/api/login\", state)\n//         .then(res => {\n//           console.log('al: Login.js: login: res: ', res)\n//           localStorage.setItem('token', res.data.payload)\n//           props.history.push('/protected')\n//         })\n//         .catch(err => {\n//           console.error(err.response)\n//         })\n\n//     }\n\n//     return (\n//         <div>\n//             <form onSubmit={login}>\n//                 <input\n//                 type=\"text\"\n//                 name=\"username\"\n//                 value={state.username}\n//                 onChange={handleChange}\n//                 />\n//                 <input \n//                   type=\"text\"\n//                   name=\"password\"\n//                   value={state.password}\n//                   onChange={handleChange}\n//                   />\n//                   <button>Log In</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default Login\n","/Users/austinlittlefield/Auth-Friends/friends/src/components/PrivateRoute.js",[],"/Users/austinlittlefield/Auth-Friends/friends/src/utils/axiosWithAuth.js",[],"/Users/austinlittlefield/Auth-Friends/friends/src/components/Friends.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":2,"message":"41","line":35,"column":44,"nodeType":"42","messageId":"43","endLine":35,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":1,"column":16,"nodeType":"42","messageId":"46","endLine":1,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-undef","'AddFriend' is not defined.","Identifier","undef","no-unused-vars","'useState' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]